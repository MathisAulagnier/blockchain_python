classDiagram
    class Block {
        +int index
        +string previous_hash
        +float timestamp
        +list transactions
        +int nonce
        +int difficulty
        +string hash
        +__init__(index, previous_hash, transactions, difficulty, timestamp)
        +calculate_hash() string
        +mine_block() string
        +print_block() void
        +__repr__() string
    }

    class Blockchain {
        +int difficulty
        +list chain
        +__init__(difficulty)
        +create_genesis_block() Block
        +get_last_block() Block
        +add_block(transactions) void
        +is_chain_valid() boolean
    }

    class Token {
        +string identifier
        +boolean staking
        +float created_at
        +string hash
        +__init__()
        +calculate_hash() string
        +get_value() float
        +plot_value(nb_days) void
        +toggle_staking() void
        +to_dict() dict
        +__repr__() string
    }

    class TokenManager {
        +dict tokens
        +int max_tokens
        +__init__(max_tokens)
        +create_token() Token
        +create_initial_tokens(count) list
        +get_token(token_id) Token
        +get_all_tokens() list
        +get_staking_tokens() list
        +get_tokens_value() float
        +get_staking_tokens_value() float
    }

    class Wallet {
        +string address
        +set available_tokens
        +set staked_tokens
        +__init__(address)
        +deposit_token(token_id, stake) void
        +withdraw_token(token_id) boolean
        +stake_token(token_id) boolean
        +unstake_token(token_id) boolean
        +balance() int
        +staked_balance() int
        +total_balance() int
        +__repr__() string
    }

    class WalletManager {
        +dict wallets
        +__init__()
        +create_wallet(address) Wallet
        +get_wallet(address) Wallet
        +deposit(address, token_id, stake) Wallet
    }

    class BlockchainManager {
        +TokenManager token_manager
        +WalletManager wallet_manager
        +list pending_transactions
        +string origin_wallet
        +int transaction_threshold
        +__init__(difficulty, initial_supply, origin_wallet, transaction_threshold)
        +add_transaction(transaction) void
        +commit_pending_transactions() void
        +create_initial_supply(count, origin_wallet) list
        +transfer_token(token_id, from_address, to_address) dict
        +stake_token(token_id, address) dict
        +unstake_token(token_id, address) dict
        +get_token_history(token_id) list
        +get_token_by_index(index) Token
        +get_staking_stats() dict
        +create_wallet_for_user(user_address, initial_credit) Wallet
        +display_all_blocks() void
        +display_last_block() void
        +get_block_count() int
    }

    Blockchain <|-- BlockchainManager : extends
    BlockchainManager o-- TokenManager : contains
    BlockchainManager o-- WalletManager : contains
    TokenManager o-- Token : manages
    WalletManager o-- Wallet : manages
    Blockchain o-- Block : contains
